# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

# Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
#   config.vm.box = "fgrehm/precise64-lxc"
#   config.vm.synced_folder "/vagrant", "/tmp/vag", disabled: true
#   config.vm.provision "ansible" do |ansible|
#       ansible.playbook = "provisioning/playbook.yml"
#   end
# end

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  #config.vm.provision "shell", inline: "echo Hello"
  config.hostmanager.enabled = true
  config.hostmanager.manage_host = true
  config.hostmanager.ignore_private_ip = false
  config.hostmanager.include_offline = true



  config.vm.define "nms" do |node|
    node.vm.box = "ubuntu/trusty64"
    node.vm.hostname = "vagrant-nms"
    node.vm.network :private_network, ip: '192.168.20.10'
    node.vm.provision "ansible" do |ansible|
      ansible.playbook = "playbook/nms.yml"
      #ansible.verbose = 'vvv'
      ansible.sudo = true
    end
  end

  config.vm.define "lxc1" do |node|
    node.vm.box = "ubuntu/trusty64"
    node.vm.hostname = "lxc1"
    node.vm.network :private_network, ip: '192.168.20.22'
    #node.vm.network "forwarded_port", guest: 80, host: 8081
    #node.vm.provision "ansible" do |ansible|
    #  ansible.playbook = "playbook/nodeserver.yml"
    #  ansible.verbose = 'vvv'
    #end
  end

  config.vm.define "lxc2" do |node|
    node.vm.box = "ubuntu/trusty64"
    node.vm.hostname = "lxc2"
    node.vm.network :private_network, ip: '192.168.20.22'
    #node.vm.provision "ansible" do |ansible|
    #  ansible.playbook = "playbook/nodeserver.yml"
    #  ansible.sudo = true
    #end
  end


end
