<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>create packages for configuration repositories triggered by github notifications</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.security.AuthorizationMatrixProperty>
      <permission>hudson.model.Item.ViewStatus:rls-manager-acme</permission>
      <permission>hudson.model.Item.Build:rls-manager-acme</permission>
      <permission>hudson.model.Item.Read:rls-manager-acme</permission>
      <permission>hudson.model.Item.Configure:rls-manager-acme</permission>
      <permission>hudson.model.Item.Discover:rls-manager-acme</permission>
      <permission>hudson.scm.SCM.Tag:rls-manager-acme</permission>
      <permission>hudson.model.Run.Update:rls-manager-acme</permission>
      <permission>hudson.model.Item.Workspace:rls-manager-acme</permission>
    </hudson.security.AuthorizationMatrixProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.21">
      <autoRebuild>false</autoRebuild>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.2.1">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>octopush-conf</name>
        <url>git@github.com:acme-dot-io/octopush-conf.git</url>
      </hudson.plugins.git.UserRemoteConfig>
      <hudson.plugins.git.UserRemoteConfig>
        <name>elvira-conf</name>
        <url>git@github.com:acme-dot-io/elvira-conf.git</url>
      </hudson.plugins.git.UserRemoteConfig>
      <hudson.plugins.git.UserRemoteConfig>
        <name>toacme-conf</name>
        <url>git@github.com:acme-dot-io/toacme-conf.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/testing</name>
      </hudson.plugins.git.BranchSpec>
      <hudson.plugins.git.BranchSpec>
        <name>*/prod</name>
      </hudson.plugins.git.BranchSpec>
      <hudson.plugins.git.BranchSpec>
        <name>*/staging</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.PerBuildTag/>
    </extensions>
  </scm>
  <assignedNode>rls-jenkins-as-rls-user</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <com.cloudbees.jenkins.GitHubPushTrigger plugin="github@1.8">
      <spec></spec>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>component=`echo $GIT_BRANCH | cut -d&apos;/&apos; -f1`
branch=`echo $GIT_BRANCH | cut -d&apos;/&apos; -f2`
main_component=$(echo $component | sed &apos;s/-conf//&apos;)
semver=$(curl -s http://elvira.acme.com/api/semver/$branch/$main_component)
version=${semver}.${BUILD_NUMBER}
sha=$(echo $GIT_COMMIT | cut -c 1-7)
basename=$component-$version-${branch}-${sha}
filename=${basename}.zip
echo $filename
. /home/rls/.rvm/scripts/rvm
export rvm_bin_path=/home/rls/.rvm/bin
export GEM_HOME=/home/rls/.rvm/gems/ruby-2.1.1
export IRBRC=/home/rls/.rvm/rubies/ruby-2.1.1/.irbrc
export MY_RUBY_HOME=/home/rls/.rvm/rubies/ruby-2.1.1
export rvm_path=/home/rls/.rvm
export rvm_prefix=/home/rls
export PATH=&quot;/home/rls/.rvm/gems/ruby-2.1.1/bin:/home/rls/.rvm/gems/ruby-2.1.1@global/bin:/home/rls/.rvm/rubies/ruby-2.1.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/bin/X11:/usr/games:/home/rls/bin:/home/rls/.rvm/bin&quot;

export rvm_version=&quot;1.25.22 (stable)&quot;
export SHLVL=1
export GEM_PATH=&quot;/home/rls/.rvm/gems/ruby-2.1.1:/home/rls/.rvm/gems/ruby-2.1.1@global&quot;

export ANSIBLE_FORCE_COLOR=true
cd /home/local/git/startmeup/package
ansible-playbook -i inventory main.yml -e &quot;component=$component version=$version filename=$filename branch=$branch sha=$sha&quot;
#touch rls-pipeline-$ENV


if [ ${ENV} = &quot;prod&quot; ];
then
  ENV=&quot;gprod&quot;
  #curl  &quot;http://elvira.acme.com/tags/api/update.php?repo=${REPO}&amp;env=${ENV}&amp;tag=${GIT_COMMIT}&amp;key=ABC123&quot;
else
  GENV=&quot;g${ENV}&quot;
  #curl  &quot;http://elvira.acme.com/tags/api/update.php?repo=${REPO}&amp;env=${GENV}&amp;tag=${GIT_COMMIT}&amp;key=ABC123&quot;
  echo &quot;deploying in ${ENV}&quot;
  echo &quot;repo=$REPO&quot; &gt; rls-pipeline-$ENV
  echo &quot;revision=$GIT_COMMIT&quot; &gt;&gt; rls-pipeline-$ENV
fi




#############################
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>rm rls-pipeline-* -f</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.jira.JiraIssueUpdater plugin="jira@1.39"/>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.3.1">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
  </buildWrappers>
</project>