---
# release playbook
component_lb_enable_timeout: 3

debug_mode_on: false

# git
git_dir: /home/local/git
# svn
svn_dir: /home/local/svn

# fpm temp dir
pkg_tmp_dir: /var/tmp/fpm

# repository distribution
pkg_distribution: acme

component_package_name: "{{ component }}"
# package metadata
pkg_vendor: ACME
pkg_license: Proprietary Code
pkg_maintainer: <rls-team@acme.com>

component_package_name_prefix: acme

# nasty stuff for excluding files in static packages
component_package_excluded_extensions: false

pkg_input_type: dir

# roles/packaging/tasks/artifacts.yml
component_artifact_is_singlefile: false
# roles/packaging/tasks/main.yml
init_scripts_setup: false

# hipchat
pkg_hipchat_color: purple
pkg_hipchat_token: ****
# rls-cocina
pkg_hipchat_room: 123456

# input
# roles/packaging/tasks/git.yml
# component_git_uri: used when the git repository name differs from the component string. the github.com/acme-dot-io/:uri uri part
component_git_uri: "{{ component }}"
# output_type
# roles/packaging/tasks/deb.yml
pkg:
  rpm:
    base_prefix : /home/httpd/sites
    user: "--rpm-user httpd"
    group: "--deb-group httpd"
  deb:
    base_prefix : /var/www/sites
    user: "--deb-user www-data"
    group: "--deb-group www-data"

# roles/packaging/tasks/git.yml
deploy_user: rls
git_crypt_cmd: /usr/local/bin/git-crypt
git_crypt_key_file: /home/rls/.ssh/rls-git-crypt.key

# roles/packaging/tasks/pkg-scripts.yml
#pkg_use_init_scripts: false
pkg_scripts_setup: false
init_scripts_rootdir: /home/local/git/pkg-scripts/
pkg_script_opts: --template-scripts
pkg_script_files_opt: { preinst: '--before-install', postinst: '--after-install ', prerm: '--before-remove ', postrm: '--after-remove ' }
fpm_pkg_opts:
# roles/packaging/tasks/pkg-conffiles.yml
pkg_conffiles_setup: false
pkg_conffiles_etcdir: /etc

fpm_scripts_opts:

# roles/packaging/tasks/deb.yml
component_notification_irc_room: hubot
component_output: deb
component_package_publish:
  branch:
    develop:
      aptly:
        - { "repo" : "testing", "distribution": "acme-testing", "endpoint" : "testing" }
    master:
      aptly:
        - { "repo" : "staging", "distribution": "acme-staging", "endpoint" : "staging" }
        - { "repo" : "prod", "distribution": "acme-prod", "endpoint" : "prod" }
    testing:
      aptly:
        - { "repo" : "testing-conf", "distribution": "acme-testing", "endpoint" : "testing-conf" }
    staging:
      aptly:
        - { "repo" : "staging-conf", "distribution": "acme-staging", "endpoint" : "staging-conf" }
    prod:
      aptly:
        - { "repo" : "prod-conf", "distribution": "acme-prod", "endpoint" : "prod-conf" }
    iris:
      aptly:
        - { "repo" : "iris-conf", "distribution": "acme-iris", "endpoint" : "iris-conf" }


# package playbook
canary_status: 0
deploy_status: 0

# release playbook
setup:
  web:
    packages:
      - acme-web-core
      - acme-web-generic
      - acme-frontend-default
      - acme-site-conf
      - acme-utilities
  elvira:
    packages:
      - acme-elvira
      - acme-elvira-conf
  octopush:
    packages:
      - acme-elvira
      - acme-elvira-conf
  sal:
    packages:
      - acme-sal
      - acme-sal-conf
      - acme-sal-flags
