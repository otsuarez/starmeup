---
# Handle plugins
# If Jenkins is installed or updated, wait for pulling the Jenkins CLI, assuming 10s should be sufficiant
#- name: 10s delay while starting Jenkins
#  wait_for: port=8080 delay=10
#  when: ${jenkins_install.changed}
#  tags:
#    - jenkins
#    - cli

# Create Jenkins CLI destination directory
- name: "Create Jenkins CLI destination directory"
  file: path={{ jenkins_root }} state=directory owner=jenkins group=jenkins
  tags:
    - jenkins
    - cli

- name: wait 60 seconds for port 8080 to become open on the host, do not start checking for 10 seconds
  wait_for: port=8080 delay=20

# Get Jenkins CLI from localhost
- name: Get Jenkins CLI
  get_url: url=http://localhost:8080/jnlpJars/jenkins-cli.jar dest={{ jenkins.cli_dest }} mode=0644
  sudo_user: jenkins
  sudo: yes
  ignore_errors: yes
  poll: 20
  tags:
    - jenkins
    - cli

# Get Jenkins CLI from localhost - second time is the charm
- name: Get Jenkins CLI
  get_url: url=http://localhost:8080/jnlpJars/jenkins-cli.jar dest={{ jenkins.cli_dest }} mode=0644 force=no
  sudo_user: jenkins
  sudo: yes
  poll: 10
  async: 60
  tags:
    - jenkins
    - cli

# Get latest Jenkins update file
- name: Get Jenkins updates
  get_url: url=http://updates.jenkins-ci.org/update-center.json dest={{ jenkins.updates_dest }} thirsty=yes mode=0644 
  sudo_user: jenkins
  poll: 10
  register: jenkins_updates
  tags:
    - jenkins
    - cli

# Jenkins Update-center
- name: Update-center Jenkins
  shell: "cat {{ jenkins.updates_dest }} | sed '1d;$d' | curl -X POST -H 'Accept: application/json' -d @- http://localhost:8080/updateCenter/byId/default/postBack"
  sudo_user: jenkins
  #when: ${jenkins_updates.changed}
  tags:
    - jenkins
    - cli

# Wait for Jenkins to install plugins, assuming 10s should be sufficiant
- name: 10s delay while installing plugins
  wait_for: port=8080 delay=10
  #when: ${jenkins_updates.changed}
  notify:
  - restart jenkins
  tags:
    - jenkins
    - cli

# Install/update Jenkins plugins
- name: Install/update plugins
  command: java -jar {{ jenkins.cli_dest }} -s http://localhost:8080 install-plugin {{ item }}
  sudo_user: jenkins
  notify:
  - restart jenkins
  #when: when ${jenkins.plugins} is defined and ${jenkins_updates.changed}
  with_items: jenkins.plugins
  tags:
    - jenkins
    - cli

- name: Install/update custom host plugins
  command: java -jar {{ jenkins.cli_dest }} -s http://localhost:8080 install-plugin {{ item }}
  sudo_user: jenkins
  notify:
  - restart jenkins
  #when: when ${jenkins.plugins} is defined and ${jenkins_updates.changed}
  with_items: jenkins_plugins
  when: jenkins_plugins is defined
  tags:
    - jenkins
    - cli

# Safe-restart Jenkins
#- name: Safe-restart Jenkins
#  command: java -jar ${jenkins.cli_dest} -s http://localhost:8080 restart
  #when: ${jenkins_updates.changed}
#  notify:
#  - restart jenkins
#  tags:
#    - jenkins
#    - cli
